; smult1.a
; from https://codebase64.org/doku.php?id=base:seriously_fast_multiplication
; tweaked for size and speed
;
; 8 bit x 8 bit signed multiply, 16 bit result
; Average cycles: 62.99
; 2095 bytes


* = 0x200

; Tables must be aligned to page boundary
square1_low
    !for i, 0, 511 {
        !byte <((i*i)/4)
    }
square1_high
    !for i, 0, 511 {
        !byte >((i*i)/4)
    }

square2_low
    !for i, 0, 511 {
        !byte <(((i-255)*(i-255))/4)
    }
square2_high
    !for i, 0, 511 {
        !byte >(((i-255)*(i-255))/4)
    }

; ----------------------------------------------------------------------------------
; Description: Signed 8-bit multiplication with signed 16-bit result.
;
; On Entry:
;   A: 8-bit signed value
;   X: 8-bit signed value
;
; On Exit:
;   Y (low byte) and A (high byte): 16-bit signed product
;   preserves X
mult_8bit_signed
    ; Step 1: unsigned multiply from mult14
    sta sm1
    sta sm3
    eor #$ff
    sta sm2
    sta sm4

    sec
sm1 = * + 1
    lda square1_low,x
sm2 = * + 1
    sbc square2_low,x
    tay
sm3 = * + 1
    lda square1_high,x
sm4 = * + 1
    sbc square2_high,x

    ; Step 2: apply sign (See C=Hacking16 for details).
    cpx #$80
    bcc +
    sbc sm1
+
    bit sm1
    bpl +
    stx temp
    sec
temp = * + 1
    sbc #0
+
    rts
